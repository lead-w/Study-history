(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{194:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" git")]),t._v(" "),a("h2",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    创建git用户\n      useradd git\n      passwd git\n\n    查看用户名字"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("邮箱\n      git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可有可无"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n      git config user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email\n    修改用户名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("邮箱\n      git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your_username"')]),t._v("\n      git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your_email"')]),t._v("\n    查看本地 提交地址\n      git remote "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v\n\n    创建git仓库\n      git init 初始化项目  他会创建一个"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git文件 里面放了一堆配置\n      git init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("bare 不包含工作区域 只是一个仓库 让别人提交代码\n\n    查看状态\n    git status\n\n    添加 提交地址\n    git remote add origin 地址\n\n    删除本地 提交地址\n    git branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" master\n\n    删除远程分支\n    git push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'分支名字'")]),t._v("\n\n    撤销 修改的文件 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("为所有\n    git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" readme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n\n    拉取分支\n\t  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" fetch origin 分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("qimingzi\n\n    合并分支\n    git merge dev "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//他会创建2个在合并")]),t._v("\n    git rebase dev  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//他在原来基础上合并")]),t._v("\n\n\n    返回到指定的分支\n      git log\n      git reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard d22f3b7de65383a3f277237a79af27b854e94f67\n\n    提交 加"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f是强制\n      git push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f\n\n    克隆某个分支\n\t\t\tgit clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b b1 https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/github.com/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\tgit命令：全局设置用户名邮箱配置\n\n    查看git用户名\n      git config user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n\n    查看邮箱配置\n      git config user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email\n\n    全局配置用户名\n      git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameVal"')]),t._v("\n\n    全局配置邮箱\n      git config "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("global user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eamil@qq.com"')]),t._v("\n\n    merge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("refusing to merge unrelated histories\n    加上"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("allow"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("unrelated"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("histories\n\n\n")])])]),a("h2",{attrs:{id:"三个区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个区域","aria-hidden":"true"}},[t._v("#")]),t._v(" 三个区域")]),t._v(" "),a("ul",[a("li",[t._v("工作区 是红色(status)\n"),a("ul",[a("li",[t._v("git add (到暂存区)")])])]),t._v(" "),a("li",[t._v("暂存区 是绿色\n"),a("ul",[a("li",[t._v("git commit (到版本库)")])])]),t._v(" "),a("li",[t._v("版本库\n"),a("ul",[a("li",[t._v("git log(查看版本号)")])])])]),t._v(" "),a("h3",{attrs:{id:"git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff","aria-hidden":"true"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),a("ul",[a("li",[t._v("比较工作区和暂存区(就是 git add 之后的比较)\n"),a("ul",[a("li",[t._v("git diff --cached")])])]),t._v(" "),a("li",[t._v("比较工作区和版本库\n"),a("ul",[a("li",[t._v("git diff master(分支)")])])])]),t._v(" "),a("h3",{attrs:{id:"撤销-git-add-内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销-git-add-内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销(git add 内容)")]),t._v(" "),a("ul",[a("li",[t._v("git reset Head .(将绿色状态变成红色)")])]),t._v(" "),a("h3",{attrs:{id:"从暂存区把内容撤回来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从暂存区把内容撤回来","aria-hidden":"true"}},[t._v("#")]),t._v(" 从暂存区把内容撤回来")]),t._v(" "),a("ul",[a("li",[t._v("git checkout index.html/.(绿色部分覆盖红色)")])]),t._v(" "),a("h3",{attrs:{id:"git-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rm","aria-hidden":"true"}},[t._v("#")]),t._v(" git rm")]),t._v(" "),a("ul",[a("li",[t._v("删除工作区(或者暂存区)的内容 先要在本地把文件删除 在执行 git rm")]),t._v(" "),a("li",[t._v("git rm index.html")])]),t._v(" "),a("h3",{attrs:{id:"删除缓存区的内容-保存工作区的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除缓存区的内容-保存工作区的内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除缓存区的内容 保存工作区的内容")]),t._v(" "),a("ul",[a("li",[t._v("git rm --cached index.html")])]),t._v(" "),a("h3",{attrs:{id:"从工作区域直接到版本区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从工作区域直接到版本区域","aria-hidden":"true"}},[t._v("#")]),t._v(" 从工作区域直接到版本区域")]),t._v(" "),a("ul",[a("li",[t._v("git commit -a -m 'xxx'")])]),t._v(" "),a("h3",{attrs:{id:"恢复版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#恢复版本","aria-hidden":"true"}},[t._v("#")]),t._v(" 恢复版本")]),t._v(" "),a("ul",[a("li",[t._v("git log 查看历史版本")]),t._v(" "),a("li",[t._v("git reset --hard 历史版本号")]),t._v(" "),a("li",[t._v("git reflog 历史版本号")]),t._v(" "),a("li",[t._v("history 查看输入的历史命令")]),t._v(" "),a("li",[t._v("git reset --hard^ 往上回滚一级")])]),t._v(" "),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("ul",[a("li",[t._v("创建分支 git branch dev")]),t._v(" "),a("li",[t._v("查看分支 git branch")]),t._v(" "),a("li",[t._v("切换分支 git checkout dev")]),t._v(" "),a("li",[t._v("创建切换分支 git checkout -b dev")]),t._v(" "),a("li",[t._v("删除分支 git branch -d dev")]),t._v(" "),a("li",[t._v("查看合并图谱 git log --oneline --graph/git log --oneline --graph --all --decorate")]),t._v(" "),a("li",[t._v("git cherry-pick 'xx' 分支上合并别的分支版本号")])]),t._v(" "),a("h2",{attrs:{id:"存储工作区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储工作区","aria-hidden":"true"}},[t._v("#")]),t._v(" 存储工作区")]),t._v(" "),a("ul",[a("li",[t._v("本地分支没有保存 要调到另一个分支 可以将当前工作区暂停")]),t._v(" "),a("li",[t._v("git stash 存储")]),t._v(" "),a("li",[t._v("git stash list 查看存储工作区")]),t._v(" "),a("li",[t._v("git stash pop 释放本地存储(上一个,会删除)")]),t._v(" "),a("li",[t._v("git stash apply 应用存储的(不删除)")]),t._v(" "),a("li",[t._v("git stash drop 删除上一个")])]),t._v(" "),a("h2",{attrs:{id:"vscode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode","aria-hidden":"true"}},[t._v("#")]),t._v(" vscode")]),t._v(" "),a("ul",[a("li",[t._v("code spell checker\n"),a("ul",[a("li",[t._v("单词检查")])])]),t._v(" "),a("li",[t._v("code runner\n"),a("ul",[a("li",[t._v("执行运行脚本")])])]),t._v(" "),a("li",[t._v("eslint")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  parser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel-eslint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把源码转成语法树的工具")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airbnb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承airbnb规则")]),t._v("\n  env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定运行环境")]),t._v("\n    browser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  rules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linebreak-style"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    indent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//缩进风格")]),t._v("\n    quotes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"double"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//引号类型")]),t._v("\n    semi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭语句强制分号结尾")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-console"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//禁止使用console")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arrow-parens"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//箭头函数用小括号括起来")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新设定tabsize")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.tabSize"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #让vue中的js按编辑器自带的ts格式进行格式化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vetur.format.defaultFormatter.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vscode-typescript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// // #每次保存的时候自动格式化 他eslint保存 还有点冲突(格式化代码的时候 会把最后一行空格删除,eslint 需要保存这一行)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.formatOnSave"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #每次保存的时候将代码按eslint格式进行修复")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"editor.codeActionsOnSave"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source.fixAll.eslint"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h2",{attrs:{id:"修改-commit-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-commit-log","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改 commit log")]),t._v(" "),a("ul",[a("li",[t._v("打开历史 最近3条记录\n"),a("ul",[a("li",[t._v("git rebase -i HEAD~3")]),t._v(" "),a("li",[t._v("将"),a("code",[t._v("pick")]),t._v("改为"),a("code",[t._v("edit")]),t._v(" 然后保存。")])])]),t._v(" "),a("li",[t._v("接着就是修改日志内容了\n"),a("ul",[a("li",[t._v("他会打开之前edit 的log")])])]),t._v(" "),a("li",[t._v("完成编辑日志后，记得执行 git commit --amend\n"),a("ul",[a("li",[t._v("git rebase --continue")])])]),t._v(" "),a("li",[t._v("Rebase目的是打开提交的历史记录，让您选择要修改的内容。 Git会让你在一个新的分支修改内容。 git rebase --continue 则是让你重新回到之前的分支。")])]),t._v(" "),a("h3",{attrs:{id:"合并-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并-log","aria-hidden":"true"}},[t._v("#")]),t._v(" 合并 log")]),t._v(" "),a("ul",[a("li",[t._v("git rebase -i HEAD~3")]),t._v(" "),a("li",[t._v("将pick 修改成 squash(这里注意  如果修改最近的三条,\b最近的2条修改成squash, 最远的一条不能动)")]),t._v(" "),a("li",[t._v("操作错了 可以取消 git rebase --abort")]),t._v(" "),a("li",[t._v("git rebase --continue")])])])}],!1,null,null,null);s.default=e.exports}}]);